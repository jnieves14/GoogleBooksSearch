{"version":3,"sources":["components/Jumbotron/index.js","components/Card/index.js","components/Form/index.js","components/List/index.js","components/Grid/index.js","components/Book/index.js","components/Footer/index.js","utils/API.js","pages/Home.js","pages/Saved.js","pages/NoMatch.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","children","className","Card","icon","title","aria-hidden","Form","q","handleInputChange","handleFormSubmit","htmlFor","id","type","value","placeholder","name","onChange","required","onClick","List","ListItem","Container","fluid","Row","Col","size","split","map","join","Book","subtitle","authors","link","description","image","Button","target","rel","href","src","alt","Footer","getBooks","axios","get","params","getSavedBooks","deleteBook","delete","saveBook","bookData","post","Home","state","books","message","event","setState","API","then","res","data","catch","preventDefault","handleBookSave","book","find","googleId","volumeInfo","infoLink","imageLinks","thumbnail","this","length","key","Component","Saved","err","console","log","handleBookDelete","_id","NoMatch","Nav","open","width","window","innerWidth","updateWidth","newState","toggleNav","addEventListener","removeEventListener","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","location","pathname","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d327388.chunk.js","sourcesContent":["// export { default } from \"./Jumbotron.component\";\n\nimport React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron({ children }) {\n  return <div className=\"jumbotron mt-4\">{children}</div>;\n}\n\nexport default Jumbotron;","// export { default } from \"./Card.component\";\n\nimport React from \"react\";\n\nfunction Card({ icon, title, children }) {\n  return (\n    <div className=\"card mt-4\">\n      <div className=\"card-header\">\n        <h3>\n          <strong>\n            <i className={`fa fa-${icon}`} aria-hidden=\"true\" /> {title}\n          </strong>\n        </h3>\n      </div>\n      <div className=\"card-body\">{children}</div>\n    </div>\n  );\n}\n\nexport default Card;","// export { default } from \"./Form.component\";\n\nimport React from \"react\";\n\nfunction Form({ q, handleInputChange, handleFormSubmit }) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"Query\">\n          <strong>Book</strong>\n        </label>\n        <input\n          className=\"form-control\"\n          id=\"Title\"\n          type=\"text\"\n          value={q}\n          placeholder=\"Man's Search For Meaning\"\n          name=\"q\"\n          onChange={handleInputChange}\n          required\n        />\n      </div>\n      <div className=\"pull-right\">\n        <button\n          onClick={handleFormSubmit}\n          type=\"submit\"\n          className=\"btn btn-lg btn-danger float-right\"\n        >\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;","// export { default } from \"./List.component\";\n\nimport React from \"react\";\nimport \"./style.css\";\n\n// This component exports both the List and ListItem components\n\nexport const List = ({ children }) => (\n  <ul className=\"list-group\">\n    {children}\n  </ul>\n);\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n\n// export default List;","// export { default } from \"./Grid.component\";\n\nimport React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n\n// export default Grid;\n\n","import React from \"react\";\nimport { ListItem } from \"../List\";\n// import ListItem from \"../List\";\nimport { Row, Col } from \"../Grid\";\n// import Row from \"../Grid\";\n// import Col from \"../Grid\";\nimport \"./style.css\";\n\nfunction Book({ title, subtitle, authors, link, description, image, Button }) {\n  return (\n    <ListItem>\n      <Row className=\"flex-wrap-reverse\">\n        <Col size=\"md-8\">\n          <h3 className=\"font-italic\">{title}</h3>\n          {subtitle && <h5 className=\"font-italic\">{subtitle}</h5>}\n        </Col>\n        <Col size=\"md-4\">\n          <div className=\"btn-container\">\n            <a className=\"btn btn-light\" target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\n              View\n            </a>\n            <Button />\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-6\">\n          <p className=\"font-italic small\">Written by {authors}</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"12 sm-4 md-2\">\n          <img className=\"img-thumbnail img-fluid w-100\" src={image} alt={title} />\n        </Col>\n        <Col size=\"12 sm-8 md-10\">\n          <p>{description}</p>\n        </Col>\n      </Row>\n    </ListItem>\n  );\n}\n\nexport default Book;","// export { default } from \"./Footer.component\";\n\nimport React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer>\n      <hr />\n      <p className=\"pull-right\">\n        <i className=\"fab fa-github\" /> Proudly built using React.js\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;","import axios from \"axios\";\n\nexport default {\n  // RETURN BOOKS FROM GOOGLE API\n  getBooks: function(q) {\n    return axios.get(\"/api/google\", { params: { q: \"title:\" + q } });\n  },\n  // RETURN ALL SAVED BOOKS\n  getSavedBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // DELETE SAVED BOK WITH BOOK ID\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // SAVE BOOK TO THE DATABASE\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Form from \"../components/Form\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\n// import List from \"../components/List\";\n\nclass Home extends Component {\n  state = {\n    books: [],\n    q: \"\",\n    message: \"Search For A Book To Begin!\"\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  getBooks = () => {\n    API.getBooks(this.state.q)\n      .then(res =>\n        this.setState({\n          books: res.data\n        })\n      )\n      .catch(() =>\n        this.setState({\n          books: [],\n          message: \"No Books Found, Try a Different Query\"\n        })\n      );\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.getBooks();\n  };\n\n  handleBookSave = id => {\n    const book = this.state.books.find(book => book.id === id);\n\n    API.saveBook({\n      googleId: book.id,\n      title: book.volumeInfo.title,\n      subtitle: book.volumeInfo.subtitle,\n      link: book.volumeInfo.infoLink,\n      authors: book.volumeInfo.authors,\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks.thumbnail\n    }).then(() => this.getBooks());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1 className=\"text-center\">\n                <strong>(React) Google Books Search</strong>\n              </h1>\n              <h2 className=\"text-center\">Search for and Save Books of Interest.</h2>\n            </Jumbotron>\n          </Col>\n          <Col size=\"md-12\">\n            <Card title=\"Book Search\" icon=\"far fa-book\">\n              <Form\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                q={this.state.q}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Results\">\n              {this.state.books.length ? (\n                <List>\n                  {this.state.books.map(book => (\n                    <Book\n                      key={book.id}\n                      title={book.volumeInfo.title}\n                      subtitle={book.volumeInfo.subtitle}\n                      link={book.volumeInfo.infoLink}\n                      authors={book.volumeInfo.authors.join(\", \")}\n                      description={book.volumeInfo.description}\n                      image={book.volumeInfo.imageLinks.thumbnail}\n                      Button={() => (\n                        <button\n                          onClick={() => this.handleBookSave(book.id)}\n                          className=\"btn btn-primary ml-2\"\n                        >\n                          Save\n                        </button>\n                      )}\n                    />\n                  ))}\n                </List>\n              ) : (\n                <h2 className=\"text-center\">{this.state.message}</h2>\n              )}\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import Row from \"../Grid\";\n// import Col from \"../Grid\";\n// import Container from \"../Grid\";\nimport { List } from \"../components/List\";\n// import List from \"../components/List\";\n\nclass Saved extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    this.getSavedBooks();\n  }\n\n  getSavedBooks = () => {\n    API.getSavedBooks()\n      .then(res =>\n        this.setState({\n          books: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  handleBookDelete = id => {\n    API.deleteBook(id).then(res => this.getSavedBooks());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1 className=\"text-center\">\n                <strong>(React) Google Books Search</strong>\n              </h1>\n              <h2 className=\"text-center\">Search for and Save Books of Interest.</h2>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Saved Books\" icon=\"download\">\n              {this.state.books.length ? (\n                <List>\n                  {this.state.books.map(book => (\n                    <Book\n                      key={book._id}\n                      title={book.title}\n                      subtitle={book.subtitle}\n                      link={book.link}\n                      authors={book.authors.join(\", \")}\n                      description={book.description}\n                      image={book.image}\n                      Button={() => (\n                        <button\n                          onClick={() => this.handleBookDelete(book._id)}\n                          className=\"btn btn-danger ml-2\"\n                        >\n                          Delete\n                        </button>\n                      )}\n                    />\n                  ))}\n                </List>\n              ) : (\n                <h2 className=\"text-center\">No Saved Books</h2>\n              )}\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Saved;","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import Row from \"../Grid\";\n// import Col from \"../Grid\";\n// import Container from \"../Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1 className=\"text-center\">404 Page Not Found</h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;","// export { default } from \"./Nav.component\";\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nclass Nav extends Component {\n  state = {\n    open: false,\n    width: window.innerWidth\n  };\n\n  updateWidth = () => {\n    const newState = { width: window.innerWidth };\n\n    if (this.state.open && newState.width > 991) {\n      newState.open = false;\n    }\n\n    this.setState(newState);\n  };\n\n  toggleNav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth);\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Google Books\n        </Link>\n        <button\n          onClick={this.toggleNav}\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/\"\n              >\n                Search\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/saved\"\n              >\n                Saved\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Saved from './pages/Saved';\nimport NoMatch from './pages/NoMatch';\nimport Nav from \"./components/Nav\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/saved\" component={Saved} />\n            <Route component={NoMatch} />\n          </Switch>\n      </div>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}